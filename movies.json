{
  "openapi": "3.0.3",
  "info": {
    "title": "Homework Express JS & Middleware",
    "version": "1.0.11"
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    }
  ],
  "tags": [
    {
      "name": "Movies",
      "description": "Everything about Movies",
      "externalDocs": {
        "description": "Find out more",
        "url": "http://swagger.io"
      }
    },
    {
      "name": "Users",
      "description": "Everything about Users"
    }
  ],
  "paths": {
    "/movies": {
      "get": {
        "tags": [
          "Movies"
        ],
        "summary": "Get all data movies",
        "description": "Get all data movies with required login",
        "operationId": "getMovies",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Movies"
        ],
        "summary": "Add a new movies",
        "description": "Add a new movies",
        "operationId": "addMovies",
        "requestBody": {
          "description": "Create a new movies",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Movies"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Movies"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Movies"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Movies"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Movies"
                }
              }
            }
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/movies/{moviesId}": {
      "get": {
        "tags": [
          "Movies"
        ],
        "summary": "Find movies order by ID",
        "description": "All of This can only be done by the logged in user.",
        "operationId": "getMoviesById",
        "parameters": [
          {
            "name": "moviesId",
            "in": "path",
            "description": "ID of order that needs to be fetched",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Movies"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Movies"
                }
              }
            }
          },
          "400": {
            "description": "Unauthenticated"
          },
          "403": {
            "description": "Unauthorized"
          }
        }
      },
      "put": {
        "tags": [
          "Movies"
        ],
        "summary": "Update an existing movies",
        "description": "All of This can only be done by the logged in user.",
        "operationId": "updateMovies",
        "parameters": [
          {
            "name": "moviesId",
            "in": "path",
            "description": "ID of the order that needs to be deleted",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Update an existent movies",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Movies"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Movies"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Movies"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Movies"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Movies"
                }
              }
            }
          },
          "400": {
            "description": "Unauthenticated"
          },
          "403": {
            "description": "Unauthorized"
          }
        }
      },
      "delete": {
        "tags": [
          "Movies"
        ],
        "summary": "Delete movies by ID",
        "description": "All of This can only be done by the logged in user.",
        "operationId": "deleteMovies",
        "parameters": [
          {
            "name": "moviesId",
            "in": "path",
            "description": "ID of the order that needs to be deleted",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Unauthenticated"
          },
          "403": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/register": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Create user",
        "description": "create new user",
        "operationId": "createUser",
        "requestBody": {
          "description": "Created user object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Users"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Users"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Users"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Users"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Users"
                }
              }
            }
          }
        }
      }
    },
    "/login": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Login",
        "description": "Login for user",
        "operationId": "loginUser",
        "requestBody": {
          "description": "Login user object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Users"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Users"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Users"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Users"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Users"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Movies": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "title": {
            "type": "string",
            "example": "Azab"
          },
          "description": {
            "type": "string",
            "example": "Film azab seseorang yang pelit ilmu"
          },
          "rating": {
            "type": "integer",
            "format": "int64",
            "example": 7
          },
          "release_year": {
            "type": "integer",
            "format": "int64",
            "example": 2023
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
        },
        "xml": {
          "name": "Movies"
        }
      },
      "Users": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "email": {
            "type": "string",
            "example": "reygan@gmail.com"
          },
          "username": {
            "type": "string",
            "example": "Reygan"
          },
          "password": {
            "type": "string",
            "example": "reygan123"
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
        },
        "xml": {
          "name": "Users"
        }
      }
    }
  }
}